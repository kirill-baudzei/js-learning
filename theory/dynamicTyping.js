// Динамическая типизация в JavaScript означает, что тип переменной определяется автоматически во время выполнения программы, а не на этапе компиляции.
// В JavaScript вам не нужно явно указывать тип данных переменной при ее объявлении, как это требуется в языках с статической типизацией (например, в Java или C++).

// Примеры:

let x = 42; // x — число (number)
x = "Hello"; // Теперь x — строка (string)
x = true; // Теперь x — булевое значение (boolean)
// Преимущества динамической типизации:

// Гибкость: Вы можете изменять тип данных переменной в процессе выполнения программы.
// Простота кода: Нет необходимости заранее определять типы данных, что упрощает разработку.
// Недостатки:

// Ошибки в рантайме: Из-за того, что типы не проверяются до выполнения, возможны ошибки, которые будут выявлены только во время работы программы.
// Неопределенное поведение: Не всегда очевидно, какой тип будет у переменной в определенный момент, что может приводить к непредсказуемому поведению.
