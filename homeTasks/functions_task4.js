// 1) Создайте функцию, которая принимает в себя целое число минут и возвращает время в нужном формате строки. (Смотри пример).
// Обратите внимание на окончание слова "час" - оно меняется в зависимости от цифры.
// Если вместо аргумента приходит не число, дробное или отрицательное число - функция возвращает строку "Ошибка, проверьте данные"
// Внимание! Давайте пока ограничимся максимум 600ю минутами (10 часов). Так как проверки на большие числа будут раздувать код (33 часа, 31 час, 11 часов и тд).
// Этого будет достаточно и код будет проверять именно этот промежуток (1 - 10 часов). Но вы можете реализовать и полный скрипт, он тоже должен проходить тесты.
// Пример:
// getTimeFromMinutes(150) => "Это 2 часа и 30 минут"
// getTimeFromMinutes(50) => "Это 0 часов и 50 минут"
// getTimeFromMinutes(0) => "Это 0 часов и 0 минут"
// getTimeFromMinutes(-150) => "Ошибка, проверьте данные"
function getTimeFromMinutes(minutes) {
  // Проверяем, что введенное значение - это положительное целое число от 0 до 600
  if (
    typeof minutes !== "number" ||
    minutes < 0 ||
    minutes > 600 ||
    !Number.isInteger(minutes)
  ) {
    return "Ошибка, проверьте данные";
  }

  // Вычисляем количество часов и минут
  const hours = Math.floor(minutes / 60); // Количество целых часов
  const remainingMinutes = minutes % 60; // Оставшиеся минуты

  // Функция для правильного склонения слова "час"
  function getCorrectWordForHours(hours) {
    if (hours === 1) {
      return "час";
    } else if (hours >= 2 && hours <= 4) {
      return "часа";
    } else {
      return "часов";
    }
  }

  // Формируем строку с корректным склонением
  return `Это ${hours} ${getCorrectWordForHours(
    hours
  )} и ${remainingMinutes} минут`;
}

// 2) Напишите функцию, которая принимает в себя 4 числа и возвращает самое большее из них. Если один из аргументов не является числом или их меньше 4 - возвращается 0. Дробные числа разрешены.
function findMaxNumber(a, b, c, d) {
  // Проверяем, что все 4 аргумента являются числами
  if (
    typeof a === "number" &&
    typeof b === "number" &&
    typeof c === "number" &&
    typeof d === "number"
  ) {
    // Возвращаем максимальное число из 4
    return Math.max(a, b, c, d);
  } else {
    // Если хоть один аргумент не число, возвращаем 0
    return 0;
  }
}

// 3
// Задача:
// Создайте функцию, которая будет принимать в себя один аргумент-целое положительное число.
// Она должна возвращать строку, в которой будут через пробел выведены числа Фибоначчи. Причем, их количество должно быть равно переданному аргументу.
// Если переданный аргумент не число - вернуть пустую строку. Решать без применения рекурсии.
// Пример:
// fib(4) => ''0 1 1 2"
// fib(7) => ''0 1 1 2 3 5 8"
// fib('7') => ''"
// fib(1) => "0"
// fib(0) => ''"

// решение
function fib(num) {
  if (typeof num !== "number" || num <= 0 || !Number.isInteger(num)) {
    return "";
  }

  let result = "";
  let first = 0;
  let second = 1;

  for (let i = 0; i < num; i++) {
    if (i + 1 === num) {
      result += `${first}`;
      // Без пробела в конце
    } else {
      result += `${first} `;
    }

    let third = first + second;
    first = second;
    second = third;
  }

  return result;
}

fib(5);
